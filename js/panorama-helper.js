const PANORAMA_EVENT_CONTEXT_DECOUPLED_ROOT="Decoupled root";
const PANORAMA_EVENT_CONTEXT_IAM="iam";
var IsPwdManagerUsedForUsername=0;
var IsPwdManagerDetectedUsingProxyForUsername=0;
var IsPwdManagerUsedForPassword=0;
var IsPwdManagerDetectedUsingProxyForPassword=0;
const SigninPanorama=(function(context){const PANORAMA_EVENT_TYPE_PREFIX="pano-cust_";
const PANORAMA_EVENT_TYPE_FLOW="sign-in-flow";
const PANORAMA_EVENT_TYPE_ACCOUNT_RESOLVE="account-resolver";
const PANORAMA_EVENT_TYPE_PASSWORD="password";
const PANORAMA_EVENT_TYPE_ENTER_MFA="mfa";
const PANORAMA_EVENT_VALUE_PWD_MANAGER_USED="Password manager used";
const PANORAMA_EVENT_VALUE_PWD_MANAGER_PROXY_USED="Password manager proxy used";
const PANORAMA_EVENT_VALUE_LOGIN_HINT_USED="Login hint used";
const PANORAMA_EVENT_VALUE_LOGIN_HINT_AND_ACCOUNT_HINT_USED="Login hint and account hint used";
const PANORAMA_EVENT_VALUE_MFA_HW="Hardware TOTP";
const PANORAMA_EVENT_VALUE_MFA_OTHER="Other MFA";
const PANORAMA_EVENT_DETAIL_STARTED="Started";
const PANORAMA_EVENT_DETAIL_COMPLETED="Completed";
const PANORAMA_EVENT_DETAIL_CANCEL="Cancel";
const PANORAMA_EVENT_DETAIL_FAILED="Failed attempt";
const PANORAMA_EVENT_DETAIL_PRESENTATION="Presentation";
const PANORAMA_EVENT_DETAIL_SUCCESS="Success attempt";
const supportedPanoramaEventValue=new Set([PANORAMA_EVENT_VALUE_PWD_MANAGER_USED,PANORAMA_EVENT_VALUE_PWD_MANAGER_PROXY_USED,PANORAMA_EVENT_VALUE_LOGIN_HINT_USED,PANORAMA_EVENT_VALUE_LOGIN_HINT_AND_ACCOUNT_HINT_USED,PANORAMA_EVENT_VALUE_MFA_HW,""]);
const supportedPanoramaEventDetail=new Set([PANORAMA_EVENT_DETAIL_STARTED,PANORAMA_EVENT_DETAIL_COMPLETED,PANORAMA_EVENT_DETAIL_CANCEL,PANORAMA_EVENT_DETAIL_FAILED,PANORAMA_EVENT_DETAIL_PRESENTATION,PANORAMA_EVENT_DETAIL_SUCCESS]);
function getPanoramaMfaStringFromKey(mfaKey){switch(mfaKey){case"HW":return PANORAMA_EVENT_VALUE_MFA_HW;
case"SW":case"SWHW":case"U2F":case"WebAuthn":case"SMS":case"OTP":case"MULTI":case"NONE":default:return PANORAMA_EVENT_VALUE_MFA_OTHER;
}}function sendPanoramaCustomMetric(eventType,eventContext,eventValue,eventDetail){if(typeof isSignInTrackPanoramaCustomMetricEnabled==="undefined"||!isSignInTrackPanoramaCustomMetricEnabled){return false;
}if(eventType===PANORAMA_EVENT_TYPE_ENTER_MFA){eventValue=getPanoramaMfaStringFromKey(eventValue);
}if(eventValue===PANORAMA_EVENT_VALUE_MFA_OTHER||!supportedPanoramaEventValue.has(eventValue)||!supportedPanoramaEventDetail.has(eventDetail)||!window.panorama){return false;
}try{window.panorama("trackCustomEvent",{eventType:PANORAMA_EVENT_TYPE_PREFIX+eventType,eventContext:eventContext,eventValue:eventValue,eventDetail:eventDetail,timestamp:Date.now()});
}catch(err){return false;
}return true;
}function getPwdManagerUsernamePanoramaEvent(loginHint){try{return IsPwdManagerUsedForUsername?PANORAMA_EVENT_VALUE_PWD_MANAGER_USED:(IsPwdManagerDetectedUsingProxyForUsername?PANORAMA_EVENT_VALUE_PWD_MANAGER_PROXY_USED:(Number(loginHint)?PANORAMA_EVENT_VALUE_LOGIN_HINT_USED:""));
}catch(error){return"";
}}function getPwdManagerPasswordPanoramaEvent(){try{return IsPwdManagerUsedForPassword?PANORAMA_EVENT_VALUE_PWD_MANAGER_USED:(IsPwdManagerDetectedUsingProxyForPassword?PANORAMA_EVENT_VALUE_PWD_MANAGER_PROXY_USED:"");
}catch(error){return"";
}}document.addEventListener("pwdManagerDetected.username",function(event){if(event.detail&&Number(event.detail.proxy)){IsPwdManagerDetectedUsingProxyForUsername=1;
}else{IsPwdManagerUsedForUsername=1;
}});
document.addEventListener("pwdManagerDetected.username.clear",function(event){IsPwdManagerDetectedUsingProxyForUsername=0;
IsPwdManagerUsedForUsername=0;
});
document.addEventListener("pwdManagerDetected.password",function(event){if(event.detail&&Number(event.detail.proxy)){IsPwdManagerDetectedUsingProxyForPassword=1;
}else{IsPwdManagerUsedForPassword=1;
}});
document.addEventListener("pwdManagerDetected.password.clear",function(event){IsPwdManagerDetectedUsingProxyForPassword=0;
IsPwdManagerUsedForPassword=0;
});
document.addEventListener("flow.init",function(event){const eContext=context===PANORAMA_EVENT_CONTEXT_IAM?PANORAMA_EVENT_CONTEXT_IAM:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_FLOW,eContext,"",PANORAMA_EVENT_DETAIL_STARTED);
});
document.addEventListener("flow.completed",function(event){return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_FLOW,context,"",PANORAMA_EVENT_DETAIL_COMPLETED);
});
document.addEventListener("form.account-resolve.init",function(event){return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ACCOUNT_RESOLVE,"","",PANORAMA_EVENT_DETAIL_PRESENTATION);
});
document.addEventListener("form.account-resolve.success",function(event){const eContext=(event.detail&&event.detail.context=="iam")?PANORAMA_EVENT_CONTEXT_IAM:PANORAMA_EVENT_CONTEXT_DECOUPLED_ROOT;
const eLoginHint=(event.detail&&event.detail.hasLoginHint)?event.detail.hasLoginHint:"0";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ACCOUNT_RESOLVE,eContext,getPwdManagerUsernamePanoramaEvent(eLoginHint),PANORAMA_EVENT_DETAIL_SUCCESS);
});
document.addEventListener("form.account-resolve.fail",function(event){const eLoginHint=(event.detail&&event.detail.hasLoginHint)?event.detail.hasLoginHint:"0";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ACCOUNT_RESOLVE,"",getPwdManagerUsernamePanoramaEvent(eLoginHint),PANORAMA_EVENT_DETAIL_FAILED);
});
document.addEventListener("form.password.init",function(event){const eLoginHint=(event.detail&&event.detail.hasLoginHint)?event.detail.hasLoginHint:"0";
const eValue=(context===PANORAMA_EVENT_CONTEXT_IAM&&Number(eLoginHint))?PANORAMA_EVENT_VALUE_LOGIN_HINT_AND_ACCOUNT_HINT_USED:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_PASSWORD,context,eValue,PANORAMA_EVENT_DETAIL_PRESENTATION);
});
document.addEventListener("form.password.success",function(event){const value=getPwdManagerPasswordPanoramaEvent();
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_PASSWORD,context,value,PANORAMA_EVENT_DETAIL_SUCCESS);
});
document.addEventListener("form.password.fail",function(event){const value=getPwdManagerPasswordPanoramaEvent();
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_PASSWORD,context,value,PANORAMA_EVENT_DETAIL_FAILED);
});
document.addEventListener("form.mfa.init",function(event){const eValue=(event.detail&&event.detail.value)?event.detail.value:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ENTER_MFA,context,eValue,PANORAMA_EVENT_DETAIL_PRESENTATION);
});
document.addEventListener("form.mfa.success",function(event){const eValue=(event.detail&&event.detail.value)?event.detail.value:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ENTER_MFA,context,eValue,PANORAMA_EVENT_DETAIL_SUCCESS);
});
document.addEventListener("form.mfa.fail",function(event){const eValue=(event.detail&&event.detail.value)?event.detail.value:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ENTER_MFA,context,eValue,PANORAMA_EVENT_DETAIL_FAILED);
});
document.addEventListener("form.mfa.cancel",function(event){const eValue=(event.detail&&event.detail.value)?event.detail.value:"";
return sendPanoramaCustomMetric(PANORAMA_EVENT_TYPE_ENTER_MFA,context,eValue,PANORAMA_EVENT_DETAIL_CANCEL);
});
});
